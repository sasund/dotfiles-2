extends typescript

global !p
from js_helpers import *
endglobal

snippet inv "invariant" b
invariant($1, '$1 `!p
snip.rv = 'are' if t[1] and t[1][-1] == 's' else 'is'
` required');
endsnippet

# Flow
snippet flow "/* @flow */" b
/* @flow */
endsnippet

snippet Pr "type Props" b
type Props = {|
	$0
|};
endsnippet

snippet IPr "type InternalProps" b
type InternalProps = {|
	...Props,
	$0
|};
endsnippet

snippet type "type X = {||};" b
type $1 = {|
	$0
|};
endsnippet

# sinon.js
snippet notc "notCalled" b
sinon.assert.notCalled($0);
endsnippet

snippet call "called" b
sinon.assert.called($1);
endsnippet

snippet callc "callCount" b
sinon.assert.callCount($1, ${2:1});
endsnippet

snippet calledw "calledWith" b
sinon.assert.calledWith($1, $2);
endsnippet

# AMO
snippet impst "import './styles.scss';" b
import './styles.scss';
endsnippet

snippet impi1 "import I18nType" b
import type { I18nType } from 'core/types/i18n';
endsnippet

snippet ac "create action" b
export const ${1:ACTION}: '$1' = '$1';
endsnippet

snippet act "create action creator" b
type ${2:`!p snip.rv = t[1][0].upper() + t[1][1:] + 'Params' if len(t[1]) else 'Params'`} = {|
	`!p snip.rv = ',\n  '.join([p.strip() + ': any' for p in t[5].split(',')]) if t[5] else ''`
|};

export type ${3:`!p snip.rv = re.sub('Params$', '', t[2]) + 'Action'`} = {|
	type: typeof ${4:`!p snip.rv = make_constant_name(t[1])`},
	payload: $2,
|};

export const ${1:action} = ({ $5 }: $2): $3 => {
	return {
		type: $4,
		payload: { $5 },
	};
};
endsnippet

# WebExtensions
snippet brg "browser.runtime.getURL()"
browser.runtime.getURL("$1")
endsnippet
